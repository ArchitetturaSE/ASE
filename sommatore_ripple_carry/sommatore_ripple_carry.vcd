$date
  Wed Nov 01 15:53:41 2017
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 2 ! a[1:0] $end
$var reg 2 " b[1:0] $end
$var reg 1 # c_in $end
$var reg 2 $ sum[1:0] $end
$var reg 1 % c_out $end
$scope module uut $end
$var reg 2 & a[1:0] $end
$var reg 2 ' b[1:0] $end
$var reg 1 ( c_in $end
$var reg 2 ) sum[1:0] $end
$var reg 1 * c_out $end
$var reg 3 + carry[2:0] $end
$scope module sum_bits(0) $end
$scope module full_add $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . c_in $end
$var reg 1 / sum $end
$var reg 1 0 c_out $end
$var reg 1 1 c0 $end
$var reg 1 2 c1 $end
$var reg 1 3 partial_sum $end
$scope module inst_ha0 $end
$var reg 1 4 a $end
$var reg 1 5 b $end
$var reg 1 6 sum $end
$var reg 1 7 c_out $end
$upscope $end
$scope module inst_ha1 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : sum $end
$var reg 1 ; c_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module sum_bits(1) $end
$scope module full_add $end
$var reg 1 < a $end
$var reg 1 = b $end
$var reg 1 > c_in $end
$var reg 1 ? sum $end
$var reg 1 @ c_out $end
$var reg 1 A c0 $end
$var reg 1 B c1 $end
$var reg 1 C partial_sum $end
$scope module inst_ha0 $end
$var reg 1 D a $end
$var reg 1 E b $end
$var reg 1 F sum $end
$var reg 1 G c_out $end
$upscope $end
$scope module inst_ha1 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J sum $end
$var reg 1 K c_out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00 !
b00 "
0#
b00 $
0%
b00 &
b00 '
0(
b00 )
0*
b000 +
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
#10000000
b10 !
b11 "
b01 $
1%
b10 &
b11 '
b01 )
1*
b100 +
1-
1/
13
15
16
19
1:
1<
1=
1@
1A
1D
1E
1G
#20000000
