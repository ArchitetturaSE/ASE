$date
  Sat Nov 04 17:45:23 2017
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # sum[3:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$scope module uut $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( cin $end
$var reg 1 ) cout $end
$var reg 4 * sum[3:0] $end
$var reg 4 + g[3:0] $end
$var reg 4 , p[3:0] $end
$var reg 4 - c[3:0] $end
$var reg 5 . s[4:0] $end
$scope module (0) $end
$scope module ha $end
$var reg 1 / x $end
$var reg 1 0 y $end
$var reg 1 1 s $end
$var reg 1 2 c $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module ha $end
$var reg 1 3 x $end
$var reg 1 4 y $end
$var reg 1 5 s $end
$var reg 1 6 c $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module ha $end
$var reg 1 7 x $end
$var reg 1 8 y $end
$var reg 1 9 s $end
$var reg 1 : c $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module ha $end
$var reg 1 ; x $end
$var reg 1 < y $end
$var reg 1 = s $end
$var reg 1 > c $end
$upscope $end
$upscope $end
$scope module (0) $end
$upscope $end
$scope module (1) $end
$upscope $end
$scope module (2) $end
$upscope $end
$scope module (3) $end
$upscope $end
$scope module (0) $end
$upscope $end
$scope module (1) $end
$upscope $end
$scope module (2) $end
$upscope $end
$scope module (3) $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
b0000 #
0$
0%
b0000 &
b0000 '
0(
0)
b0000 *
b0000 +
b0000 ,
b0000 -
b00000 .
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
#10000000
b0010 !
b0001 "
b0011 #
b0010 &
b0001 '
b0011 *
b0011 ,
b00011 .
10
11
13
15
#20000000
b0100 !
b0010 "
b0110 #
b0100 &
b0010 '
b0110 *
b0110 ,
b00110 .
00
01
03
14
17
19
#30000000
